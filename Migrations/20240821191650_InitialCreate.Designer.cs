// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserApi.Data;

#nullable disable

namespace UserApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240821191650_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("UserApi.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("UserApi.Models.Signin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("AccessDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AccessMsg")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("AccessStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Signins");
                });

            modelBuilder.Entity("UserApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Account")
                        .HasColumnType("int");

                    b.Property<string>("ActiveMsg")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("ActiveStatus")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("Account");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UserApi.Models.Signin", b =>
                {
                    b.HasOne("UserApi.Models.User", "UserNavigation")
                        .WithMany("Signins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserNavigation");
                });

            modelBuilder.Entity("UserApi.Models.User", b =>
                {
                    b.HasOne("UserApi.Models.Account", "AccountNavigation")
                        .WithMany("Users")
                        .HasForeignKey("Account");

                    b.Navigation("AccountNavigation");
                });

            modelBuilder.Entity("UserApi.Models.Account", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("UserApi.Models.User", b =>
                {
                    b.Navigation("Signins");
                });
#pragma warning restore 612, 618
        }
    }
}
